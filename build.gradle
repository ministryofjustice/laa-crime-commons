plugins {
    id "signing"
    id "nebula.release" version "17.2.0"
    id "org.sonarqube" version "4.0.0.2929"
    id "org.springframework.boot" version "3.0.4" apply false
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

group = "uk.gov.justice.service.laa-crime"

subprojects {
    apply plugin: "java"

    java {
        withSourcesJar()
        withJavadocJar()
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    group = "uk.gov.justice.service.laa-crime"

    repositories {
        mavenCentral()
    }
}

nebulaRelease {
    addReleaseBranchPattern("LCAM-519")
}

nexusPublishing {
    repositories {
        SonaType {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            username = project.findProperty("OSSRH_USERNAME") ?: System.getenv("OSSRH_USERNAME")
            password = project.findProperty("OSSRH_PASSWORD") ?: System.getenv("OSSRH_PASSWORD")
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
}

sonar {
    properties {
        property "sonar.projectName", "laa-crime-commons"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "ministryofjustice"
        property "sonar.projectKey", "ministryofjustice_laa-crime-commons"
    }
}

project(":crime-commons-spring-boot-starter-rest-client") {
    sonar {
        properties {
            property "sonar.coverage.jacoco.xmlReportPaths",
                    "${project(":crime-commons-spring-boot-starter-rest-client").buildDir}/reports/jacoco/test/jacocoTestReport.xml"
            property "sonar.exclusions", "**/RetryConfiguration.java, **/exception/**.java"
            property "sonar.coverage.exclusions", "**/RetryConfiguration.java, **/exception/**.java"
        }
    }
}

project(":crime-commons-samples") {
    apply plugin: "org.springframework.boot"
    sonar {
        skipProject = true
    }
}
